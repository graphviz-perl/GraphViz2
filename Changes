2.65 2021-01-09
- undirected edges don't get doubled in from_graph, changes dot_input

2.64 2021-01-01
- fix multigraph-handling

2.63 2021-01-01
- from_graph to handle multigraphs

2.62 2020-11-16
- fix label quoting

2.61 2020-11-08
- support Perl 5.8.8

2.60 2020-11-04
- fix GraphViz2->from_graph object method
- Parse::STT add visualise modes: REs become nodes or ports for clearer transitions
- more robust quoting for record ports
- add handling array-ref for record ports

2.59 2020-10-31
- GraphViz2->from_graph, dep on Graph, use as intermediate in Parse::Regexp
- convert Parse::Yacc, Parse::Yapp, Parse::STT to graph-based

2.58 2020-10-19
- add combine_node_and_port global option
- add_node(label => [{port=>...}]) no need <>

2.57 2020-10-15
- drop unnecessary use of "open" and "charnames"
- setting defaults for subgraphs no longer affects outside those
- now let DOT figure out inheritance rather than respecifying everything in subgraphs
- fixed docs on controlling subgraph attributes

2.56 2020-10-13
- fix problem when "which" returns empty list not scalar - thanks @eserte for report

2.55 2020-10-13
- fix bugs in webgen scripts
- make dot_input be lazy-built
- zap undoc-ed dependency method that actually belongs in ::Parse::ISA

2.54 2020-10-09
- zap report_valid_attributes method
- drop Log::Handler, any object that can "debug" or "error" works

2.53 2020-10-09
- drop Try::Tiny

2.52 2020-10-09
- zap obsolete special case in a test/webgen for Darwin - fix #7. Thanks @dbevans for report!

2.51 2020-10-08
- DOT input now prettier
- tests rearranged so can run in parallel, ergo quicker
- tests now rigorously capture DOT input in each scenario
- generating web content updated, output removed from distro so smaller
- drop Set::Array

2.50 2020-10-02
- dropped 3 more unnecessary deps, metadata tweak

2.49 2020-09-27
- split out into own distro: GraphViz2::DBI, GraphViz2::Parse::XML, GraphViz2::Parse::ISA, GraphViz2::Data::Grapher, GraphViz2::Parse::RecDescent

2.48 2020-09-17
- updated graphviz URLs to current graphviz.org ones
- use GitHub issue tracker

2.47  2018-02-23T10:06:00
	- Adopt github pull request from ThornyS, with thanx. This is part of CPAN via the PRC aka
		Pull Request Challenge.
	- Adjust tests in t/test_more_methods.t to work with BSD-based systems, and for systems
		which don't use '/' as a dir separator. As a consequence, running the tests no longer
		leaves test output files in t/.
	- Fix some code in Config.pm which triggered a warning from Perl which said:
		'panic: attempt to copy freed scalar ...'.

2.46  2017-05-11T09:57:00
	- Change the default value for the 'graph' attribute within GraphViz2::Parse::ISA from {} to ''.
		This makes it match the default for each other module in the GraphViz2::Parse::* namespace.
		The problem was reported by Kevin Ryde (RT#121599) who used GraphViz2::Parse::ISA all by
		itself, without using it via GraphViz2, and the BUILD sub has a check on the pre-existing
		value of $self -> graph, which returned {} instead of the empty string, so the code did
		not initialize $self -> graph properly with a new GraphViz2 object.

2.45  2017-04-16T10:03:00
	- In stringify_attributes(), check for undefined hash entries before processing them. If
		detected, they are set to ''. Reported by Raphael Crochet. See RT#121122.
	- Bump pre-req version of File::Which from V 1.09 to 1.21. This should solve issues of which()
		not finding *.exe files under Cygwin. See File::Which's Changes file for details.
		 Reported by Raphael Crochet. See RT#121090.
	- Reduce pre-req version of Test::More from 1.001014 to 1.001002.

2.44  2016-10-24:08:52:00
	- The patch in V 2.43 assumed one of the output files had no path, and used that name as a
		file name within a temporary directory to generate a *.gv file for dot. The code now just
		uses 'temp.gv'. Thanx to jahagirdar for reporting this via the github repo.

2.43  2016-10-20T18:20:00
	- Alongside the parameters format and output_file, add im_format and im_output_file for image
		maps.
	- Add docs for the new parameters.
	- User Types::Standard to tighten constraints on parameters passed to new().
	- Add maps/ containing various demos.

2.42  2016-08-02T12:29:00
	- Seems I misunderstood something simple. This time, I've eliminated shape 'square'.
		Thanx again to Daran Davis.

2.41  2016-08-02T09:00:00
	- To preempt more problems, I've made the same change as in V 2.40, in
		report.nodes.and.edges.pl, html.labels.1.pl, sub.graph.pl, sub.sub.graph.pl, trivial.pl
		and sub.graph.frames.pl. I can't explain why the tickets mentioned in 2.40 did not
		include these examples.

2.40  2016-08-02T08:41:00
	- In scripts/rank.sub.graph.*.pl, change shape 'box' to 'doublecircle'. Some users have
		reported errors with 'box'. See RT#81467 (Reported by D. Thomas on 2012-11-26, which I
		rejected. My apologies to D. Thomas), and RT#116628 (Reported by Daran Davis on 2016-08-01,
		which I now accept). I tested firstly by using 'rect' instead of 'box', and that also
		works for me (the output is the same as with 'rect'), but using 'doublecircle' is visually
		more impressive. Also, I hope all versions of Graphviz in use will support 'doublecircle'.
		I can't see anything in the changelog for Graphviz to say when 'box' became available, but
		it must have been years ago now.

2.39  2016-05-23T12:24:00
	- Escape { in regexp in t/test.t to keep recent Perls happy.
	- Add a dependency on Perl V 5.10.1.

2.38  2016-05-03T15:22:00
	- Remove confusing para about $label in docs for add_edge(). See RT#105861. Thanx BOBMATH.
	- Change licence to Perl. See LICENSE file.
	- Update some pre-reqs.
	- Adopt new repo format.
	- Wind back min Perl version from 5.14.2 to 5.10.1 and File::Copy from 2.21 to 2.14.
	- Remove t/version.t in order to get rid of Test::Version.

2.37  Sun Oct 11 12:19:00 2015
	- Fix the default for the graph parameter in GraphViz2::Parse::*, to be '' instead
		of {}. See notes for V 2.36 for more info. GraphViz2::Parse::Regexp was fixed in V 2.36.
		This versions fixes all the other modules in lib/GraphViz2/Parse/.
	- Rename the internal attribute and method 'isa' to 'is_a', to avoid clashing with
		UNIVERSAL::isa. Thanx to Kevin Ryde to suggesting this.
	- In scripts/html.labels.2.pl, rename palegreen to palegreen.
	- Re-generate the demo page with the new version #.

2.36  Tue Oct  6 20:43:00 2015
	- Fix the default for the graph parameter in GraphViz2::Parse::Regexp, to be '' instead
		of {}. The {} tricked the 'if' in sub BUILD into not initializing the 'graph' attribute
		and hence forced the caller to provide a value. See RT#107566. Reported by Kevin Ryde.
	- Remove .gitignore from MANIFEST. Add it to MANIFEST.SKIP.

2.35  Wed Feb 18 16:32:00 2015
	- Rename CHANGES to Changes as perl CPAN::Spec::Changes.
	- Add github repo to Build.PL.
	- Add LICENSE to disto and MANIFEST.

2.34  Mon Oct 27 13:31:00 2014
	- Expand the algorithm used to find a primary table/key pair for a given foreign table/key.
	- Expand the FAQ to explain this algorithm. It's the first Q/A in the FAQ.
	- Reformat the docs to have a max of 100 chars per line.
	- Reformat this file to have a max of 100 chars per line.

2.33  Sat Aug 30 08:27:00 2014
	- Stop emitting empty node labels. Thanx to Fjodor Fedov (see RT#98426).
	- Update docs on how to download AT&T's Graphviz. Thanx to Alex Becker (see RT#98405).

2.32  Mon Aug 18 15:57:00 2014
	- In subs add_edge() and add_node(), remove leading and trailing whitespace from HTML tables.
		This is formatting sugar, but it also affects the regexp used later when
		stringify_attributes() is called. The same patch was put into stringify_attributes() in
		V 2.20, but there are cases when this whitespace processing must take place somewhat before
		that sub is called. See RT#98098. Many thanx to Andrew Beverley for reporting this.
	- Add scripts/html.labels.3.pl to test the above.
	- Replace Perl6::Slurp with File::Slurp, as part of my policy to reduce the # of modules used.

2.31  Fri Aug  8 11:37:00 2014
	- Re-write the code which splits port (and compass) off node names. A single regexp was not good
		enough.

2.30  Tue Aug  5 16:22:00 2014
	- Expand GraphViz2::DBI to associate foreign keys column names with the corresponding primary
		table's primary key name. Fallback is to the previous behaviour. See the FAQ for
		GraphViz2::DBI for details.
	- The new code requires DBIx::Admin::TableInfo V 3.00, and Lingua::EN::PluralToSingular V 0.14.
	- Add sequential numbers to the column names. There are actually the Graphviz port numbers.
		The table name is port 0.
	- Make foreign key edges point to the table name, rather than the primary key name.
		This shifts such edges from entering the right-hand side of the table to entering via the
		left, simplifying the image, since they no longer overlap with edges entering or leaving the
		right-hand side.

2.29  Wed Jul  9 16:46:00 2014
	- Add exclude => [qw/table_1 table_2 .../] and include => [qw/table_3 table_4 .../] options
		to GraphViz2::DBI.create().

2.28  Tue Feb 18 15:25:00 2014
	- Remove the method get_column_info().
	- Patch GraphViz2::DBI method create() to use DBIx::Admin::TableInfo, rather than approximately
		duplicate the code.
	- The hashref returned by table_info() has some changed some keys:
		o New:       attributes
		o Changed:   column_names => columns
		o Unchanged: foreign_keys
		o New:       primary_keys
		Further, 'column_names' used to point to an array. 'columns' now points to a hashref.
	- Remove 'use utf8' from modules, because it's global (affects all modules loaded I gather).
	- Remove 'use open qw(:std :utf8)'.
	- Remove 'use charnames qw(:full :short)' because it is never used.
	- Update scripts/dbi.schema.pl to use $ENV{DBI_SCHEMA} for Postgres, if set.

2.27  Tue Feb 11 13:40:00 2014
	- Stop using bare word file handles (again).
	- Change sub BUILD() in all sub-classes to check whether or not a 'graph' parameter was supplied
		to new(). If so, use it rather than instantiating a new GraphViz2 object.
		This fixes a problem with those script/*.pl demos which use this feature.
	- Fiddle t/sample.recdescent.1.dat, since the original test data happened to look like HTML,
		and that stopped GraphViz2.stringify_attributes() adding double-quotes to protect the label.
		That in turn caused dot to issue a syntax error when the generated DOT data was read.

2.26  Thu Jan 30 12:44:00 2014
	- Stop using bare word file handles.
	- Remove these lines from GraphViz2.pm (because utf8 is global and the others are not needed):
		use utf8;
		use open      qw(:std :utf8);    # Undeclared streams in UTF-8.
		use charnames qw(:full :short);  # Unneeded in v5.16.

2.25  Mon Jan  6 17:06:00 2014
	- Remove debug printing of the output of 'dot -T?' (a list of valid output formats).
	- Fix typos in output names in rank.sub.graph.1.pl and rank.sub.graph.2.pl.
		rank.sub.graph.1.pl was outputting to html/rank.sub.graph.2.svg and visa versa.

2.24  Mon Dec  2 09:30:00 2013
	- Rewrite scripts/extract.output.formats.pl, which used to download a page of documentation from
		graphviz.org, and parse it to build a list of output formats. The problems are:
		(1) Forgetting to run the script; (2) the on-line docs being out-of-date.
		So, as of this version, I now parse the output of 'dot -T?', which will not just be more
		accurate, but will also include the formats supported by locally-installed plugins. It's a
		win-win result.
	- Put that new logic into GraphViz2's load_valid_attributes() method.
	- Expand the FAQ to discuss the above operation.

2.23  Sun Dec  1 09:42:00 2013
	- Update lists of valid attibutes by running scripts/extract.*.pl, and incorporating the changes
		into the source code of GraphViz2.pm (at the end). I use Data::Section::Simple to read this
		data. These lists now correspond to Graphviz V 2.34. Changes:
		o Remove 'aspect' as an attribute 'graph'.
		o Add 'inputscale' as an attribute of 'graph'.
		o Add 'overlap_shrink' as an attribute of 'graph'.
		o Add 'star' as an attribute of 'node shape'.
		o Add 'underline' as an attribute of 'node shape'.
		o Add 'xdot1.2' as an attribute of 'output format'.
		o Add 'xdot1.4' as an attribute of 'output format'.
		See RT#91073. Many thanx for Kent Fredric for bringing this to my attention.
	- Add t/version.t, which uses Test::Version.
	- Update pre-reqs.
	- Add use strict/warnings to Build.PL and Makefile.PL.

2.22  Fri Sep  6 16:03:00 2013
	- Fix handling of graph attributes which are for clusters but not for subgraphs.
		See scripts/sub.graph.frames.pl for sample code.
		See the demo page for the output of that script.
		See the new FAQ item 'How do I specify attributes for clusters?' for details.
		Many thanx to Bill Hollingsworth (private email) for prompting me to investigate this bug.
	- Document method default_subgraph().

2.21  Fri Sep  6 13:00:00 2013
	- Replace Path::Tiny with File::Spec, because the former's list of dependencies is soooo long.
		Changed files: GraphViz2::Config, scripts/copy.config.pl, scripts/find.config.pl, Build.PL
		and Makefile.PL. See: RT#88435 (for Tree::DAG_Node) for an explanation.

2.20  Tue Aug 27 16:22:00 2013
	- In sub stringify_attributes(), remove leading and trailing whitespace from HTML tables like
		so: s/^\s+(<)/$1/ and s/(>)\s+$/$1/. This is formatting sugar, but it also affects the next
		regexp.
	- In the same sub, change a regexp from /^<.+>$/ to /^<.+>$/s. Note trailing 's'.
		This allows '.' to match newlines within HTML lables. This fixes a bug (not yet reported).
	- Both these changes allow HTML labels to be more nicely formatted in the source code of the
		module which uses GraphViz2 (such as MarpaX::Grammar::GraphViz2).
	- Split scripts/html.labels.pl into scripts/html.labels.1.pl and scripts/html.labels.2.pl.
		These demonstrate the 2 types of HTML labels.
	- Document sub escape_some_chars().
	- Add an FAQ item on using whitespace in HTML labels.

2.19  Tue Aug 20 10:44:00 2013
	- Remove the global graph attribute 'record_orientation', as forewarned in V 2.10, in June.
	- Fix handling of some global attributes.
		Previously, some options mentioned in the call to new(...) were not set by that call.
		The options affected were: 'driver', 'format', 'strict', 'subgraph' and 'timeout'.
		The options 'driver', 'format', and 'timeout' could be set in the call to run(...),
		but in new(...), the value of 'format' was ignored, and the value of 'subgraph' generated an
		error referring to '... not a valid attribute ...'.
		Thanx to Larry Knibb for reporting this problem, for 'driver'.
	- Remove reference to GraphViz2::Parse::Marpa from scripts/pod2html.sh. See comment below for
		V 2.15. This module has been replaced by MarpaX::Grammar::GraphViz2, which depends on
		MarpaX::Grammar::Parser.

2.18  Wed Aug  7 09:22:00 2013
	- Remove print from sub BUILD() left over from debugging.
	- Update Build.PL and Makefile.PL to include bugtracker and license items.
		Also replace the Perl version checking code with a simple 'require 5.014.002; # For the utf8
		stuff.'.

2.17  Sat Aug  3 08:58:00 2013
	- Fix handling of record shapes. E.g. label => [] ignored global default shape 'Mrecord'.
		Thanx to Kent Fredric for this report. See RT#87560.
	- Fix handling of the graph's default name. This is used in 'digraph $name {...}'.
		Previously, names like '' or '0' were ignored, and such values defaulted to 'Perl'.
	- Add scripts/record.4.pl to demonstrate setting record-style node attributes.
	- Fix names of html/utf8*.svg and png files, as output by scripts/utf8*.pl.
	- Fix scripts/generate.sh.pl which generates scripts/generate.(png,svg).sh.

2.16  Fri Aug  2 10:54:00 2013
	- Patch GraphViz2.pm to handle both SVG and (eg) PNG output. I failed to test this properly.
		Thanx to Kent Fredric for this report. See RT#87525.
	- Patch scripts/Heawood.pl to use font ArialMT instead of Arial when running under Darwin (OSX).
		Thanx to David Jack Olrik for this report. See RT#87478.
	- Remove special case code in scripts/jointed.edges.pl. It used png:gd instead of png, to work
		round an unknown Graphviz problem. Let's hope /your/ version of Graphviz is up-to-date.
	- Patch scripts/circo.pl: Add comment searched for by t/test.t, which is used to label
		html/index.html.
	- Add scripts/generate.sh.pl to generate scripts/generate.png.sh and scripts/generate.svg.sh.
		This adds 2 tests, and 2 images to the demo page, and fixes various typos in those *.sh
		files.
	- Switch from Hash::FieldHash to Moo.
	- Add config/.htgraphviz2 to help the author generate the demo.
	- Add GraphViz2::Config.pm, and split GraphViz2::Filer off from GraphViz2::Utils, which alsp
		helps generate the demo.
	- Switch from Hash::FieldHash to Moo.
	- Use File::Slurp except where I need Perl6::Slurp's utf8 option. I needed File::Slurp's
		write_file() for the new script scripts/generate.sh.pl, so I decided to use it in most
		places.
	- Rename scripts/utf8.pl to scripts/utf8.1.pl.
	- Rename scripts/utf8.test.pl to scripts/utf8.2.pl.
	- Rename html/utf8.svg to html/utf8.1.svg.
	- Rename html/utf8.test.svg to html/utf8.2.svg.

2.15  Mon Jul 29 14:42:00 2013
	- Remove GraphViz2::Parse::Marpa, until it's re-written to use Jeffrey Kegler's code to dump a
		grammar.
	- Add scripts/circo.pl and it's output html/circo.svg.
	- For non-HTML labels, escape double-quotes if they are not already escaped.
		This allows pathological labels such as '\"'.
	- For all labels, escape '[' and ']' if they are not already escaped.
		The rationale for this is shrouded in the mists of time :-(.
	- Put author tests in xt/author.
	- Add Algorithm::Dependency::Source::HoA V 1.110 to the pre-reqs to keep my home-grown Build.PL
		and Makefile.PL checker a bit quieter.
	- Add Config V 0, channames V 0 and open V 0 to the pre-reqs.
	- Move t/pod.t to xt/author/.
	- Switch from IPC::Run to IPC::Run3. This after a discussion with Larry Knibb re the fact that
		his code is hanging under Apache (mod_cgi) on Windows. He suggested using qx//, but I've
		gone for IPC::Run3.	 The other reason to switch is the overly-long bug list for IPC::Run,
		including Larry's report RT#87397.
		I went thru the same issues with Lee when switching from system() to IPC::Run for V 2.02.
		See RT#76459. IPC::Run3 has the advantage of letting me set binmode on various file handles.
	- For all modules and some scripts, convert:
			use strict;
			use warnings;
		into:
			use strict;
			use utf8;
			use warnings;
			use warnings  qw(FATAL utf8);    # Fatalize encoding glitches.
			use open      qw(:std :utf8);    # Undeclared streams in UTF-8.
			use charnames qw(:full :short);  # Unneeded in v5.16.

2.14  Mon Jul  1 10:09:00 2013
	- Patch push_subgraph() to correctly handle the case of an unnamed subgraph.
		The code was outputting 'subgraph "" {...}'. The extra "" are now suppressed.
		The code also handles the case of the name being undef.
		There are no doc changes because the docs described precisely what should have happened,
			thusly:
			So, without $name, 'subgraph {' is written to the output stream.
			With $name, 'subgraph "$name" {' is written to the output stream.
		Many thanx (again) to Larry Marso for reporting this, with sample code.
	- Add scripts/unnamed.sub.graph.pl.

2.13  Fri Jun 28 12:02:00 2013
	- Oops - Patch scripts/record.1.pl as was allegedly done for V 2.11.

2.12  Thu Jun 27 14:40:00 2013
	- Add scripts/plaintext.pl, which generates a 'Use of uninitialized value...' error under V 2.11
		and, after the fix, does not do so under V 2.12. Many thanx to Larry Marso for the (private
		email) report.

2.11  Thu Jun 27 09:21:00 2013
	- Correct spelling of Kent Fredric's name below, with apologies.
	- Patch scripts/record.1.pl and scripts/record.2.pl to use '\\n' to get a literal '\n' in the
		output dot file. The original works my Debian machine, but needs fixing in case there's
		someone out there not using Debian :-).
	- Remove debug log message from add_edge().

2.10  Mon Jun 24 11:05:00 2013
	- Overview: Re-work the label and port handing code.
	- Note: the global graph attribute 'record_orientation' no longer does anything. The new label
		syntax, (next, and in detail in the FAQ
		(https://metacpan.org/module/GraphViz2#How-labels-interact-with-ports) ),
		is now the recommended way of using labels to specify both ports and orientation.
		Using 'record_orientation' will not cause parameter validation to fail, it just won't have
		any effect. The attribute will be removed in a future version, so prepare now by deleting it
		from your code.
	- Labels can be a string, an arrayref of strings, or an arrayref of hashrefs. The latter
		alternative is new. The keys to the hashrefs are 'text' and 'port', with the latter being
		optional. See the FAQ topic mentioned above. See scripts/record.2.pl for sample code.
		Many thanx to Kent Fredric for the report (RT#85976), and the list of suggestions.
	- Add scripts/record.3.pl and add it to the demo generating code scripts/generate.*.sh.
		It demonstrates deeply nested record structures using a string as a label. The same effect
		could be achieved by using an arrayref of hashrefs, of course. scripts/record.2.pl shows
		how.
	- Stop escaping the 2 label characters { and }, since they are used to orient fields within
		records. On the demo page http://savage.net.au/Perl-modules/html/graphviz2/, see
		scripts/record.*.pl. Expand the FAQ discussion of escaping to cover this issue.
	- Remove restriction that port names in calls to add_edge() had to start with 'port'.
		This was due to my misreading of the Graphviz docs, where all examples used a 'port' prefix.
		The code also now checks for '*::*', in case the program is using Perl classes for node
		names, in which case we don't want the first ':' to be taken as the introduction for a port
		name.
	- Update words/tokens (arrow shapes etc) stored within the source code, by running
		scripts/extract.*.pl and storing the output in lib/GraphViz2.pm after the __DATA__ token.
		Yes, I know this is hard-coding.
		See the amazing module Data::Section::Simple for details.
		The set of words/tokens matches Graphviz 2.30.1, as of today, 2013-06-24.
	- Rename CHANGES to Changes as per CPAN::Changes::SPEC.
	- Reformat the POD in lib/GraphViz2.pm slightly.
	- Remove scripts/parse.marpa.pl and t/sample.marpa.1.dat, as a step in removing all
		Marpa-related material, because it uses the deprecated NAIF interface. All new Marpa work
		should use the scanless interface (SCIF).
	- Change Build.PL and Makefile.PL to check for Perl being at least V 5.14.0. If you are using an
		earlier version, you can forgo utf8 support by editing the files to relax this restriction.
		Some tests (utf8.pl, utf8.test.pl) will presumably fail as a consequence.
		Lastly, my attention has been drawn to Unicode::Semantics::up(), but I've chosen not to use
		it.

2.09  Fri May 31 09:57:00 2013
	- Re-write the code in Build.PL and Makefile.PL which checks for Graphviz (dot) being installed,
		since the previous code, using a pipe, was failing on some versions of Windows.
	- Assume Config.pm is installed, and hence remove it from the pre-reqs.
		This also stops a warning message generated because Config's version # is undef.
	- Likewise assume File::Spec and File::Temp are installed, and 'recent enough'.
		This is because the new code uses these 3 modules before specifying the pre-reqs.
	- Bump the pre-req for Perl from 5.10.0 to 5.14, since we 'use feature qw/unicode_strings/.
	- Re-write the code in Build.PL and Makefile.PL which checks for Perl being 'recent enough',
		since the previous code, using a pre-req of "perl => '5.10.0'" generates a warning message
		when using Makefile.PL (for my current Perl V 5.14.2). Now we analyze $Config{version}.
	- One CPAN Tester found tests failing even though Graphviz was installed.
		The problem was that the Times font was missing. The new code should fail during
		'perl Build.PL', or 'perl Makefile.PL', rather than during testing, which is good.

2.08  Thu Mar 21 13:16:00 2013
	- Add $ENV{DBI_SCHEMA} to scripts/dbi.schema.pl.
	- For the MusicBrainz database, use DBI_SCHEMA=musicbrainz,cover_art_archive,report,statistics.
		See http://musicbrainz.org/doc/MusicBrainz_Database for details.
		Users of cpanm will want 'cpanm Carton' instead of 'sudo cpan Carton' in Perl dependencies.
		See https://github.com/metabrainz/musicbrainz-server/blob/master/INSTALL.md for details.

2.07  Wed Mar 13 13:24:00 2013
	- Extend GraphViz2::DBI to handle SQLite using pragma foreign_key_list($table_name).
	- Add scripts/sqlite.foreign.keys.pl to help analyze that pragma's output.
	- Remove the string 'App-Office-CMS' from scripts/dbi.schema.pl. That is, the create() method is
		called as $g -> create(name => ''). This has the effect of removing the global node from the
		resultant graph. All tables were descendents of this node, but with schemas of dozens or
		hundreds of tables, it became confusing.
	- Patch dbi.schema.pl to set the DBI connect attr sqlite_unicode and foreign_keys pragma if
		using SQLite.

2.06  Thu Nov  8 12:38:00 2012
	- No code changes.
	- For pre-reqs such as strict, warnings, etc, which ship with Perl, set the version # to 0.
		Reported as RT#80663 by Father Chrysostomos for Tree::DAG_Node.

2.05  Tue Oct  2 10:20:00 2012
	- No fundamental code changes, so no need to upgrade, unless you need the following new
		features.
	- After a request from Jack Maney, author of the Perl module Hypatia:
		o Document the mutator node_hash(), which returns a hashref keyed by node name.
			Use this to get a list of all nodes and their attributes.
		o Add a new mutator, edge_hash(), which also returns a hashref keyed by node name.
			The node is the one at the arrow/tail/ end of the edge, i.e. where the edge starts from.
			Use this to learn all sorts of things about the edge.
		o Add scripts/report.nodes.and.edges.pl (a version of scripts/html.labels.pl) to demonstrate
			how to access this data.
		o Update to POD to match.

2.04  Fri Aug 17 10:48:00 2012
	- Add Perl V 5.14.2 to the pre-reqs, for the utf8 stuff.
	- Re-write the subgraph handling code, which was broken up to V 2.03.
		Add samples, script/rank.sub.graph.[1234].pl, to demonstrate subgraph name effects and node
		rankings. script/rank.sub.graph.[12].pl use subgraphs to force a set of nodes to be
		horizontally aligned. script/rank.sub.graph.[34].pl show the effects of subgraph name
		changes on the same data.

2.03  Mon Jun 18  9:47:00 2012
	- Switch from double to single quotes in line 22 of GraphViz2::Parse::Regexp, so the resultant
		string, treated as Perl code, runs on Windows. Reported by Max Maischein as RT#77869.
	- Also, slightly reformat line 39 of that module.

2.02  Thu Apr 19 11:51:00 2012
	- Accept patch from Lee as in RT#76459, to replace the code which writes the dot input file to
		a file with binmode, and just pass the data to dot via IPC::Run.
		Happily, this allows me to eliminate 'use open qw/:encoding(UTF-8) :std/;' in t/test.t.
	- Update the pre-reqs in Build.PL and Makefile.PL.
	- Add scripts/utf8.test.pl to the list of scripts shipped with this module.
	- Add scripts/utf8* to scripts/generate.*.sh.
	- Make scripts/generate.*.sh emit a warning when DBI_DSN is not set.

2.01  Wed Mar  7 08:50:00 2012
	- I only tested V 2.00 by outputting to SVG (a text format), but outputting to a binary format
		such as PNG was broken.
		So, remove the 'use open qw/:encoding(UTF-8) :std/;', and restore binmode, in
		GraphViz2.pm.
	- Remove log to screen in utf8.pl, since Log::Handler doesn't accept utf8 as a logger option.
	- Copy scripts/utf8.pl to scripts/utf8.test.pl and edit to display just 5 delta characters.
		See html/utf8.test.svg. PNG is ok too.
		This demonstrates (hopefully) we can get the correct output on a binary format despite
		the 'Wide character in print...' message.
	- Add FAQ topic regarding this 'Wide character in print...' problem.

2.00  Tue Mar  6 16:02:00 2012
	- Support utf8 in labels. This required changes to GraphViz2.pm. See scripts/utf8.pl and
		html/utf8.svg. I'm using Perl V 5.14.2.
	  	Sample output is online at http://savage.net.au/Perl-modules/html/graphviz2/utf8.svg.
	- Add an item to the FAQ about how to write scripts using utf8.
	- Re-write GraphViz2::Parse::ISA to draw multiple class hierarchies on 1 graph. This means the
		API for that class has changed. Specifically, create() no longer exists. Call add() 1 or
		more times instead. Then, call generate_graph(). See the docs for details.
		Sample output is online at
		http://savage.net.au/Perl-modules/html/graphviz2/parse.isa.svg.

1.13  Sun Dec 25 10:33:00 2011
	- Change <img...> to <object...> in the demo creation code, to keep poor old FireFox happy.
	- Change various things in html/graphviz2.index.tx to we validate as XHTML 1.0 Strict.
	- Unreleased.

1.12  Wed Dec 14 11:22:00 2011
	- Add 5 scripts, scripts/macro.*.pl, to demonstrate using a Perl sub as a macro to generate
		both cluster and non-cluster sub-graphs.
	- Update the TODO in GraphViz2.pm, since it erroneously gave the impression the current code
		did not handle compound clusters.
	- Re-generate the demo. See: http://savage.net.au/Perl-modules/html/graphviz2/.
	- Adopt Flavio Poletti's suggestion of trying to pipe to dot, in Build.PL/Makefile.PL, rather
		than using File::Which, to see if dot (Graphviz) is installed. This (hopefully) solves
		the problem of using File::Which on systems where it is not installed, before
		Build.PL/Makefile.PL has a chance to tell the user that File::Which is required.
		See: RT#73077.
	- No code changes in *.pm files.

1.11  Tue Nov  8 10:21:00 2011
	- Fix bug where double quotes in HTML labels were being escaped and should not have been.
	  	Many thanx to Fitz Elliott for the report and initial patch.
		See https://rt.cpan.org/Ticket/Display.html?id=72259.
	- Patched scripts/html.labels.pl as per Fitz's suggested test code.
	- Rename t/lib/Parent.pm to t/lib/Adult.pm to avoid a reported problem with
		"use parent 'Parent';" under Windows.
	  	This affect various files. See https://rt.cpan.org/Public/Bug/Display.html?id=69076.

1.10  Thu Sep  1 10:45:00 2011
	- Fix bug in GraphViz in handling of nodes whose shape is none or plaintext, and whose label
		is HTML.
	- Fix bug in scripts/generate.png.sh to add png parameter to
		'perl -Ilib scripts/generate.demo.pl png'.
	- HTML labels work without any code changes, so references to them not working have been
		removed from the docs.
	- GraphViz2 is called by the now-released Graph::Easy::Marpa, so remove that item from the
		TODO list.
	- Fix doc referring to scripts/generate.index.pl. It now refers to scripts/generate.demo.pl.
	- Add DOCTYPE and Content-type to html/graphviz.index.tx. Output by scripts/generate.demo.pl,
		html/index.html, now handles UTF-8 properly.
	- Add alt to the <img ...> tags output by scripts/generate.demo.pl.
	- Add scripts/html.labels.pl. This code includes a demo of using ports.
	- Reorder methods in GraphViz2::Utils to be in alphabetical order.

1.09  Thu Jul 21 14:13:00 2011
	- Patch parameter validation to allow for output image types such as png:gd etc.
		Only the prefix before the first ':' is validated.

1.08  Thu Jul 21 11:53:00 2011
	- Change the behaviour of sub log() in GraphViz.pm. Now if called with $level eq 'error', it
		dies with $message.
	- Change references to the color darkblue to blue, so it's compatible with both the X11 and
		SVG color schemes.
	- Likewise change chartreuse to lawngreen.
	- Rename scripts/generate.index.pl to scripts/generate.demo.pl, as a more meaningful name.
	- Patch scripts/generate.demo.pl to accept the output image type as a command line parameter.
	- Use this new feature to generate png files, and upload them to the demo site
	  	http://savage.net.au/Perl-modules/html/graphviz2/ even though png is often uglier than
		svg. I did this because Iceweasel (Firefox) V 3.5.16 was not displaying svgs within the
		index file,even though they are fine when displayed directly.
	- Add scripts/generate.png.sh.
	- Note: scripts/jointed.edges.pl must call dot with -Tpng:gd and not -Tpng, for unknown
		reasons.
	- Make both scripts/generate.png.sh and scripts/generate.svg.sh redirect their log files to
		/tmp, so that we don't have to ship the logs, and also so they don't keep changing and
		hence need checking in.
	- Remove ./dbi.schema.log from the distro.

1.07  Mon Jul  4 15:46:00 2011
	- Use Date::Format to add a date stamp at the end of html/index.html, as output by
		generate.index.pl.

1.06  Tue Jun 28 11:10:00 2011
	- Change usage of File::Temp -> newdir to fix problems testing on BSD-based systems.
	- Add scripts/jointed.edges.pl.
		This demo - in Graph::Easy syntax - ships with Graph::Easy::Marpa.
	- Re-write generate.index.pl to put all demo data (where available) and images on 1 page.
	- Upload demo to (new location) http://savage.net.au/Perl-modules/html/graphviz2/index.html.

1.05  Fri Jun 24 12:40:00 2011
	- Implement GraphViz2::Parse::Marpa, along with scripts/parse.marpa.pl and t/sample.marpa.1.dat.
		The output is html/parse.marpa.svg.
	- Implement GraphViz2::Parse::STT, along with scripts/parse.stt.pl and t/sample.stt.1.dat.
		The output is html/parse.stt.svg.
	- Add use File::Spec to t/test.t

1.04  Wed Jun 22  9:36:00 2011
	- Reduce required version of File::Basename to 2.77, which came with Perl 5.10.1.
	- Stop trying to write to t/html/, and use File::Temp for a directory instead.
		That way, it doesn't matter who owns t/html/, nor whether or not it's writable.

1.03  Sun Jun 19 16:27:00 2011
	- Tweak File::Temp -> new to be File::Temp ->new(EXLOCK => 0) for BSD-based systems.

1.02  Fri Jun 17  8:36:00 2011
	- Add the pre-requisite Log::Handler to Build.PL and Makefile.PL.
	- Release HTML::Entities::Interpolate V 1.04 and Set::Array V 0.23 to CPAN.
	- Add README file.
	- Clean up TODO list.

1.01  Wed Jun 15 15:00:00 2011
	- Quote cluster/subgraph names so they may contain weird characters.
	- Add method dependency(data => $depend) to GraphViz2.pm, which accepts an object of type
	  	Algorithm::Dependency. See scripts/dependency.pl and html/dependency.svg.
	- Add GraphViz2::Parse::ISA, and scripts/parse.isa.pl, and the t/lib/Parent hierarchy.

1.00  Wed Jun 15 14:26:00 2011
	- This is a re-write of GraphViz. The method parameter lists are incompatible.
		Sorry, but it now supports all options and attributes in Graphviz V 2.23.6.
	- Rewrite GraphViz, GraphViz::Data::Grapher, GraphViz::Parse::RecDescent, GraphViz::Parse::Yacc
		and GraphViz::Parse::Yapp. The core code of *::RecDescent, *::Yacc and *::Yapp has been
		copied from GraphViz, with tiny changes.
	- GraphViz2::Data::Grapher uses Tree::DAG_Node to hold information, before calling external
		plotting programs. The tree is available for you to process whether or not you actually plot
		the graph.
	- GraphViz::Regex renamed GraphViz2::Parse::Regexp.
	- GraphViz::XML renamed GraphViz2::Parse::XML. And it uses XML::Tiny by default.
		One demo shows how to use XML::Bare instead.
	- All new documentation.
	- All new demos, in scripts/*.pl. These are documented in GraphViz's POD.
	- All demo output included, in html/*.html and html/*.svg.
